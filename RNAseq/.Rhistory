version
packageStatus()
.libPaths()
source("http://bioconductor.org/biocLite.R")
biocLite("conumee")
library("optparse")
library("rmarkdown")
install.packages("manipulate")
install.packages(c("rmarkdown", "optparse", "knitr"))
library("rmarkdown")
library("knitr")
library(RCurl)
library(ggplot)
library(ggplot2)
URL<-("https://raw.githubusercontent.com/ryanjw/ngs-3rdweek/master/visualizations/datasets/fly_data.txt")
dataset<-read.table(textConnection(getURL(URL)),header=T,check.names=F,sep="\t")
ggplot(dataset)+geom_density(aes(x=FBgn0000022,fill=fly,alpha=0.5))
gglot(dataset)+geom_density
ggplot(dataset)+geom_histogram(aes(x=FBgn0000022,fill=fly,alpha=0.5))
ggplot(dataset)+geom_histogram(aes(x=FBgn0000022,fill=fly,alpha=0.5))
names(dataset)
names(dataset)[1:50]
ggplot(dataset)+geom_histogram(aes(x=FBgn0000056,fill=fly,alpha=0.5))
?geom_histogram
install.packages("vegan")
library(vegan)
adonis(dataset[,-c(1:3)]~dataset$fly*dataset$type)
head(dataset[,1:10])
?adonis
adonis(decostand(dataset[,-c(1:3)],method="total")~dataset$fly*dataset$type)
adonis(decostand(dataset[,-c(1:3)],method=c("pa","jaccard")~dataset$fly*dataset$type)
)
adonis(decostand(dataset[,-c(1:3)],method=c("pa","jaccard"))~dataset$fly*dataset$type)
adonis(decostand(dataset[,-c(1:3)],method="pa",method="jaccard")~dataset$fly*dataset$type)
adonis(decostand(dataset[,-c(1:3)],method="pa")~dataset$fly*dataset$type,method="jaccard")
URL<-("https://raw.githubusercontent.com/ryanjw/ngs-3rdweek/master/multivariate-viz/fly_data_with_unknowns.txt")
URL<-("https://raw.githubusercontent.com/ryanjw/ngs-3rdweek/master/visualizations/multivariate-viz/fly_data_with_unknowns.txt")
dataset<-read.table(textConnection(getURL(URL)),header=T,check.names=F,sep="\t")
dim(dataset)
head(dataset[,1:10])
tail(dataset[,1:10])
mds<-metaMDS(dataset[,-c(1:4)],distance="bray",autotransform=F,k=3 )
sc<-data.frame(scores(mds),dataset[,1:3])
head(sc)
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,shape=fly,colour=type))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,shape=type,colour=fly))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=fly))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=rnorm(52)))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2),colour=rnorm(52))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2),colour=fly)
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=fly))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,size=2,colour=fly))
sc$fly
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,size=2,colour=info))
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=info),size=2)
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=info,shape=type),size=2)
ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=info,shape=type),size=3)
pca<-capscale(dataset[,-c(1:4)]~1)
pca
eigs<-eigenvals(pca)
eigs/sum(eigs)
ggplot(sc)+geom_point(aes(x=MDS1,y=MDS2,colour=info,shape=type))+labs(x="MDS1 (75.9% of variation explained)",y="MDS1 (5.8% of variation explained)")
sc<-data.frame(scores(pca)$sites,dataset[,1:4])
ggplot(sc)+geom_point(aes(x=MDS1,y=MDS2,colour=info,shape=type))+labs(x="MDS1 (75.9% of variation explained)",y="MDS1 (5.8% of variation explained)")
eigenvals(pca)
sum(eigs)
eigs/sum(eigs)
pcoa<-capscale(decostand(dataset[,-c(1:4)],"total")~1,distance="bray")
pcoa
eigs<-eigenvals(pcoa)
eigs/sum(eigs)
sc<-data.frame(scores(pcoa)$sites,dataset[,1:4])
ggplot(sc)+geom_point(aes(x=MDS1,y=MDS2,colour=info,shape=type))+labs(x="MDS1 (33.0% of variation explained)",y="MDS1 (8.2% of variation explained)")
pcoa<-capscale(decostand(dataset[,-c(1:4)],"total")~dataset$fly,distance="bray")
scores(pcoa)$centroids
ggplot(sc)+geom_point(aes(x=MDS1,y=MDS2,colour=info,shape=type))+labs(x="MDS1 (33.0% of variation explained)",y="MDS1 (8.2% of variation explained)")+annotate("text",x=c(-.157,-.077,.17),y=c(-.004,.670,.156),label=c("HYB","ORE","SAM"))
source("http://bioconductor.org/biocLite.R")
biocLite(c("pathview", "edgeR", "gage"))
100*1132416/152126075
(76)(5346216)/(152126075)
76*5346216/152126075
100*17074344/152126075
76*(5346216/4)/152126075
100*(1132416/4)/152126075
76*(5346216/4)/152126075
100*(17074344/4)/152126075
sessionInfo()
packageurl <- "http://cran.r-project.org/src/contrib/Archive/knitr/knitr_1.13.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
packageurl <- "http://cran.r-project.org/src/contrib/Archive/knitr/knitr_1.12.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
install.packages('stringr')
knit_with_parameters('~/Documents/NYUMC/Dasen/scripts/Dasen_RNAseq_report_controls.Rmd')
install.packages(c("knitr", "rmarkdown"))
install.packages(c("knitr", "rmarkdown"))
sessionInfo()
install.packages(lme4)
install.packages("lme4")
library("lme4")
?lme4
library(limma)
#library("arrayQualityMetrics") # need to install this 07/03/2016
#library(preprocessCore) # need to install this 07/03/2016
library("Biobase")
library("RColorBrewer")
library("gplots")
library(ggplot2)
library(lattice)
# work laptop path:
setwd("~/Documents/HBOI/Past_salinity/salinity_microarray/")
# home Ubuntu laptop path:
# setwd("~/Documents/salinity_microarray")
# import raw data, which were extracted by hand
# (in the future, don't do this. Use automated function to extract from raw GenePix files, which we no longer have for this data set...)
salinity_data<-read.csv("Past_salinity_microarray_data.csv")
# convert data structure into data frame type
salinity_dataframe<-data.frame(salinity_data)
# sort by RefNum
salinity_dataframe_sort<-salinity_dataframe[order(salinity_dataframe$RefNum),]
head(salinity_dataframe_sort)
# set rownames to RefNum
rownames(salinity_dataframe_sort)<-salinity_dataframe_sort$RefNumber
head(salinity_dataframe_sort)
colnames(salinity_dataframe_sort)
head(salinity_dataframe_sort)
# dimensions of the data frame should be
# [1] 15744    16
dim(salinity_dataframe_sort)
# get rid of data that were flagged "BAD" = -100
salinity.filtered.flags <- salinity_dataframe_sort[salinity_dataframe_sort$Flags!=-100,]
head(salinity.data.filtered.flags)
dim(salinity.data.filtered.flags)
salinity<-salinity.data.filtered.flags[,c(8:15)]
dim(salinity)
head(salinity)
colnames(salinity)
# normalize
dim(salinity.data.filtered.flags)
salinity_dataframe<-data.frame(salinity_data)
# sort by RefNum
salinity_dataframe_sort<-salinity_dataframe[order(salinity_dataframe$RefNum),]
head(salinity_dataframe_sort)
# set rownames to RefNum
rownames(salinity_dataframe_sort)<-salinity_dataframe_sort$RefNumber
head(salinity_dataframe_sort)
colnames(salinity_dataframe_sort)
head(salinity_dataframe_sort)
# dimensions of the data frame should be
# [1] 15744    16
dim(salinity_dataframe_sort)
# get rid of data that were flagged "BAD" = -100
salinity.filtered.flags <- salinity_dataframe_sort[salinity_dataframe_sort$Flags!=-100,]
head(salinity.data.filtered.flags)
salinity.data.filtered.flags <- salinity_dataframe_sort[salinity_dataframe_sort$Flags!=-100,]
head(salinity.data.filtered.flags)
dim(salinity.data.filtered.flags)
salinity<-salinity.data.filtered.flags[,c(8:15)]
dim(salinity)
head(salinity)
colnames(salinity)
library(limma)
source("https://bioconductor.org/biocLite.R")
biocLite("arrayQualityMetrics")
library(edgeR)
source("https://bioconductor.org/biocLite.R")
biocLite("edgeR")
library(edgeR)
setwd("~/Documents/HBOI/Past_salinity/Porites_astreoites_larvae_salinity/RNAseq")
setwd("~/Documents/HBOI/Past_salinity/Porites_astreoites_larvae_salinity/RNAseq")
annot<-read.csv("salinity_v_mansour_counts.csv")
salinity_counts<-annot
head(salinity_counts)
salinity.rnaseq.data.matrix<-as.matrix(salinity_counts)
head(salinity.rnaseq.data.matrix)
dim(salinity.rnaseq.data.matrix)
too.low<-apply(salinity_counts, 1, function(row) all(row >=10 ))
head(salinity_counts)
rownames(salinity_counts)<-salinity_counts$Name
salinity_counts_table<-salinity_counts[,c(2:4)]
head(salinity_counts_table)
class(salinity_counts_table)
too.low<-apply(salinity_counts_table, 1, function(row) all(row >=10 ))
head(too.low)
salinity.rnaseq.data.filtered<-salinity_counts_table[too.low,]
dim(salinity.rnaseq.data.filtered)
group <- factor(c(1,2,3))
design <- model.matrix(~group)
design
y <- DGEList(counts=salinity.rnaseq.data.filtered,group=group)
y$samples
head(y$counts)
levels(y$samples$group)
head(y$counts)
bcv <- 0.4
CPM <- cpm(y)
head(CPM)
CPM_table<-cbind(CPM,rownames(CPM))
colnames(CPM_table)<-c("sal25ppt","sal30ppt","sal35ppt")
head(CPM_table)
CPM <- cpm(y)
head(CPM)
plotMDS(y)
#et<-exactTest(y,dispersion=bcv^2)
et_30ppt <- exactTest(y, dispersion=bcv^2, pair=c(3,2))
et_25ppt <- exactTest(y, dispersion=bcv^2, pair=c(3,1))
sal30_ppt<-topTags(et_30ppt,n=1000,sort.by="logFC")$table
head(sal30_ppt)
sal30ppt_annotated<-cbind(sal30_ppt,rownames(sal30_ppt))
head(sal30ppt_annotated)
colnames(sal30ppt_annotated)<-c("logFC","logCPM","PValue","FDR","sequence.name")
sal30ppt_annotated<-merge(sal30ppt_annotated,annot,by="sequence.name")
head(sal30ppt_annotated)
head(sal30ppt_annotated)
sal30ppt_annotated<-cbind(sal30_ppt,rownames(sal30_ppt))
colnames(CPM_table)<-c("sal25ppt","sal30ppt","sal35ppt")
CPM <- cpm(y)
head(CPM)
CPM_table<-cbind(CPM,rownames(CPM))
colnames(CPM_table)<-c("sal25ppt","sal30ppt","sal35ppt","contig_ID")
et_30ppt <- exactTest(y, dispersion=bcv^2, pair=c(3,2))
et_25ppt <- exactTest(y, dispersion=bcv^2, pair=c(3,1))
sal30_ppt<-topTags(et_30ppt,n=1000,sort.by="logFC")$table
head(sal30_ppt)
sal30ppt_annotated<-cbind(sal30_ppt,rownames(sal30_ppt))
head(sal30ppt_annotated)
colnames(sal30ppt_annotated)<-c("logFC","logCPM","PValue","FDR","contig_ID")
sal30ppt_annotated<-merge(sal30ppt_annotated,annot,by="contig_ID")
head(CPM_table)
class(CPM_table)
CPM_table<-as.data.frame(CPM_table)
head(CPM_table)
colnames(CPM_table)<-c("sal25ppt","sal30ppt","sal35ppt","contig_ID")
sal30ppt_annotated<-merge(sal30ppt_annotated,CPM_table,by="contig_ID")
head(sal30ppt_annotated)
write.csv(sal30ppt_annotated,"P_ast_RNAseq_30pptv35ppt_top1000DE.csv")
sal25_ppt<-topTags(et_25ppt,n=1000,sort.by="logFC")$table
head(sal25_ppt)
sal25ppt_annotated<-cbind(sal25_ppt,rownames(sal25_ppt))
head(sal25ppt_annotated)
colnames(sal25ppt_annotated)<-c("logFC","logCPM","PValue","FDR","contig_ID")
sal25ppt_annotated<-merge(sal25ppt_annotated,CPM_table,by="contig_ID")
head(sal25ppt_annotated)
write.csv(sal25ppt_annotated,"P_ast_RNAseq_25pptv35ppt_top100DE.csv")
detags_30ppt <- rownames(topTags(et_30ppt,n=100)$table)
detags_25ppt <- rownames(topTags(et_25ppt,n=100)$table)
plotSmear(et_30ppt, de.tags=detags_30ppt,main="30ppt vs. 35 ppt - P. astreoides RNAseq")
abline(h = c(-2, 2), col = "blue")
plotSmear(et_25ppt,de.tags=detags_25ppt,main="25ppt vs. 35 ppt - P. astreoides RNAseq")
abline(h = c(-2, 2), col = "blue")
detags_25ppt <- rownames(topTags(et_25ppt,n=1000)$table)
plotSmear(et_25ppt,de.tags=detags_25ppt,main="25ppt vs. 35 ppt - P. astreoides RNAseq")
sal30_ppt<-topTags(et_30ppt,n=100,sort.by="logFC")$table
head(sal30_ppt)
sal30ppt_annotated<-cbind(sal30_ppt,rownames(sal30_ppt))
head(sal30ppt_annotated)
colnames(sal30ppt_annotated)<-c("logFC","logCPM","PValue","FDR","contig_ID")
sal30ppt_annotated<-merge(sal30ppt_annotated,CPM_table,by="contig_ID")
head(sal30ppt_annotated)
write.csv(sal30ppt_annotated,"P_ast_RNAseq_30pptv35ppt_top100DE.csv")
sal25_ppt<-topTags(et_25ppt,n=100,sort.by="logFC")$table
head(sal25_ppt)
sal25ppt_annotated<-cbind(sal25_ppt,rownames(sal25_ppt))
head(sal25ppt_annotated)
colnames(sal25ppt_annotated)<-c("logFC","logCPM","PValue","FDR","contig_ID")
sal25ppt_annotated<-merge(sal25ppt_annotated,CPM_table,by="contig_ID")
head(sal25ppt_annotated)
write.csv(sal25ppt_annotated,"P_ast_RNAseq_25pptv35ppt_top100DE.csv")
write.csv(sal25ppt_annotated,"P_ast_RNAseq_25pptv35ppt_top100DE.csv")
annotations=read.table("uniprot_P_ast_annotations_mansour_hits100DE.fixed.tab")
annotations=read.table("uniprot_P_ast_annotations_mansour_hits100DE.fixed.tab",sep="\t")
head(annotations)
colnames(annotations)<-c("contig_ID","species","gene_name")
head(annotations)
sal30ppt_annotated_again<-merge(sal30ppt_annotated,annotations,by="contig_ID")
sal25ppt_annotated_again<-merge(sal25ppt_annotated,annotations,by="contig_ID")
write.csv(sal25ppt_annotated_again,"P_ast_RNAseq_25pptv35ppt_top100DE.csv")
write.csv(sal30ppt_annotated_again,"P_ast_RNAseq_30pptv35ppt_top100DE.csv")
